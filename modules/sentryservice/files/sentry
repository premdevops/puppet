#!/bin/bash
# chkconfig: 345 90 90
# Description:  Sentry Service Startup Script
# ProcessName:  sentry


SENPATH=/iqs/SentinelServer ; export SENPATH
SENLOGPATH="$SENPATH/log" ; export SENLOGPATH
SENPROFILE="$SENPATH/conf/sentinel.properties" ; export SENPROFILE
MINMEM=`cat $SENPROFILE | grep -w MINMEM | awk -F= '{print $2}'` ; export MINMEM
MAXMEM=`cat $SENPROFILE | grep -w MAXMEM | awk -F= '{print $2}'` ; export MAXMEM
JAVA_HOME=/iqs/java ; export JAVA_HOME
JAVA_BIN=$JAVA_HOME/bin ; export JAVA_BIN
PATH=$PATH:$SENPATH:$JAVA_HOME:$JAVA_BIN
cd $SENPATH

start () {
	if [ -z "$MINMEM" ] || [ -z "$MAXMEM" ]; then
		echo -e "\e[1;31;40mNo MINMEM and/or MAXMEM Parameters Configured. \e[0m"
		echo "Edit $SENPROFILE to input appropriate values."
		echo "Exiting."
		exit
	else
		echo "Memory MIN:$MINMEM, MAX:$MAXMEM"
	fi
	SERSTATUS=`ps -eaf | grep Sentinel.jar | grep -v grep | wc -l`
	if [ $SERSTATUS -eq 1 ] ; then
		echo ""
		echo -e "\e[1;31;40m Sentry service already running \e[0m"
		echo ""
	else
		cd $SENPATH
		nohup $JAVA_BIN/java -Xms${MINMEM}m -Xmx${MAXMEM}m -jar $SENPATH/Sentinel.jar &
                nohup date
                nohup echo "Service Restarted..."
		sleep 10
		SERSTATUS1=`ps -eaf | grep Sentinel.jar | grep -v grep | wc -l`
		if [ $SERSTATUS1 -eq 1 ] ; then
			echo ""
			echo -e "\e[1;32;40mSentry service started successfully. \e[0m"
			echo ""
		else
			echo ""
			echo -e "\e[1;31;40mError starting the Sentry service. \e[0m"
			echo ""
		fi
	fi
}

stop () {
	SERPID=`ps -eaf | grep Sentinel.jar | grep -v grep | wc -l`
	if [ $SERPID -eq 0 ]
		then
		echo ""
		echo -e "\e[1;31;40mSentry service already stopped. \e[0m"
		echo ""
	else
		SERPID1=`ps -eaf | grep Sentinel.jar | grep -v grep | awk '{print $2}'`
		kill -9 $SERPID1
		SERPID=`ps -eaf | grep Sentinel.jar | grep -v grep | wc -l`
		if [ $SERPID -eq 0 ] ; then
			echo ""
			echo -e "\e[1;32;40mSentry Service stopped successfully. \e[0m"
			echo ""
		else
			echo ""
			echo -e "\e[1;31;40mError stopping Sentry service. \e[0m"
			echo ""
		fi
	fi
}

restart () {
	SERPID1=`ps -eaf | grep Sentinel.jar | grep -v grep | awk '{print $2}'`
	kill -9 $SERPID1
	if [ -z "$MINMEM" ] || [ -z "$MAXMEM" ]; then
		echo -e "\e[1;31;40mNo MINMEM and/or MAXMEM Parameters Configured. \e[0m"
		echo "Edit $SENPROFILE to input appropriate values."
		echo "Exiting."
		exit
	else
		echo "Memory MIN:$MINMEM, MAX:$MAXMEM"
	fi
	SERPID=`ps -eaf | grep Sentinel.jar | grep -v grep | wc -l`
	if [ $SERPID -eq 0 ]
		then
		echo ""
		echo -e "\e[1;32;40mSentry service stopped \e[0m"
		echo ""
		sleep 5
		nohup $JAVA_BIN/java -Xms${MINMEM}m -Xmx${MAXMEM}m -jar $SENPATH/Sentinel.jar &
                nohup date
                nohup echo "Service Restarted..."
		sleep 10
		SERSTATUS1=`ps -eaf | grep Sentinel.jar | grep -v grep | wc -l`
		if [ $SERSTATUS1 -eq 1 ]
			then
			echo ""
			echo -e "\e[1;32;40m Sentry service restarted successfully \e[0m"
			echo ""
		else
			echo ""
			echo -e "\e[1;31;40m Error restarting Sentry service \e[0m"
			echo ""
		fi
	else
		echo ""
		echo -e "\e[1;31;40m Error stopping Sentry service \e[0m"
		echo ""
	fi
}

status () {
	SERSTATUS=`ps -eaf | grep Sentinel.jar | grep -v grep | wc -l`
	if [ $SERSTATUS -eq 1 ]
		then
		echo ""
		echo -e "\e[1;32;40m Sentry service running \e[0m"
		echo ""
	else
		echo ""
		echo -e "\e[1;31;40m Sentry service stopped \e[0m"
		echo ""
	fi
}


case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	status)
		status
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		exit 1
		;;
esac
